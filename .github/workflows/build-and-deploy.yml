name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Setup .NET
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'  # specify your .NET version

    - name: Print current directory before restoring dependencies
      run: pwd

    # Step 3: Restore .NET dependencies
    - name: Restore dependencies
      run: dotnet restore garmin/garmin.csproj

    # Step 4: Build the application
    - name: Build the application
      working-directory: garmin  # cd into the garmin directory
      run: dotnet build --configuration Release

    # Step 5: Run your commands sequentially
    # - name: Run get-product-list
    #   run: garmin/bin/Release/net8.0/garmin get-product-list

    # - name: Run get-products-html-files
    #   run: garmin/bin/Release/net8.0/garmin get-products-html-files

    # - name: Run extract-products-to-json-from-html-files
    #   run: garmin/bin/Release/net8.0/garmin extract-products-to-json-from-html-files

    # - name: Run get-prices
    #   run: garmin/bin/Release/net8.0/garmin get-prices

    - name: Run create-table
      run: garmin/bin/Release/net8.0/garmin create-table

    # - name: Run populate-database-from-json-files
    #   run: garmin/bin/Release/net8.0/garmin populate-database-from-json-files

    # - name: Run update-prices
    #   run: garmin/bin/Release/net8.0/garmin update-prices

    # Step 5: Copy the SQLite database to the Docusaurus directory
    - name: Copy SQLite DB
      run: cp products.db homepage/static/garmin
      
    # Step 6: Install Docusaurus dependencies
    - name: Install Docusaurus dependencies
      working-directory: homepage
      run: npm install

    # Step 6: Install SQL WASM
    - name: Install SQL WASM
      working-directory: homepage
      run: npm install sql.js

    - name: Copy SQL WASM js
      run: cp homepage/node_modules/sql.js/dist/sql-wasm.js homepage/static/garmin

    - name: Copy SQL WASM wasm
      run: cp homepage/node_modules/sql.js/dist/sql-wasm.wasm homepage/static/garmin

    # Step 7: Build Docusaurus
    - name: Build Docusaurus
      working-directory: homepage
      run: npm run build

    # Step 8: Deploy to GitHub Pages
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: homepage/build  # path to your Docusaurus build directory